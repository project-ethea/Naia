#textdomain wesnoth-Naia

# Used to negate {IS_HERO}.
#define NO_OVERLAYS_NO_ELLIPSE
    overlays=""
    ellipse="" # wmllint: no ellipsecheck
#enddef

#define NO_UPKEEP_NO_OVERLAY
    [+unit]
        # dammit, esr
        upkeep=loyal
    [/unit]
#enddef

#define PETRIFIED
    [+unit]
        [status]
            petrified=yes
        [/status]
    [/unit]
#enddef

#define GENDER _GENDER
    [+unit]
        gender={_GENDER}
    [/unit]
#enddef

#define PLACEMENT _PLACEMENT
    [+unit]
        placement={_PLACEMENT}
    [/unit]
#enddef

#define PASSABLE
    [+unit]
        passable=yes
    [/unit]
#enddef

#define OVERWRITE
    [+unit]
        overwrite=yes
    [/unit]
#enddef

#define PALETTE _SRC _DEST
    [+unit]
        [+modifications]
            [object]
                [effect]
                    apply_to="image_mod"
                    add="PAL("+{_SRC}+">"+{_DEST}+")"
                [/effect]
            [/object]
        [/modifications]
    [/unit]
#enddef

#define DOOR_TILES_TO_UNITS _DOOR_OWNER_SIDE
    [setup_doors]
        side={_DOOR_OWNER_SIDE}
    [/setup_doors]
#enddef

#define FACE_DIRECTION _SUF _DIRECTION
    [set_facing]
        [filter]
            {_SUF}
        [/filter]
        facing={_DIRECTION}
    [/set_facing]
#enddef

#define FACE_LOCATION _SUF _TARGET_SLF
    [set_facing]
        [filter]
            {_SUF}
        [/filter]
        [filter_location]
            {_TARGET_SLF}
        [/filter_location]
    [/set_facing]
#enddef

#define FACE_UNIT _SUF _TARGET_SUF
    [set_facing]
        [filter]
            {_SUF}
        [/filter]
        [filter_second]
            {_TARGET_SUF}
        [/filter_second]
    [/set_facing]
#enddef

#define OPPOSITE_FACING
    [+set_facing]
        opposite=yes
    [/set_facing]
#enddef

#define FAKE_RECRUIT _SIDE _TYPE _X _Y
    [unit]
        side={_SIDE}
        type={_TYPE}
        x={_X}
        y={_Y}
        random_gender=yes
        random_traits=yes
        generate_name=yes
        moves=0
        attacks_left=0
        animate=yes
    [/unit]
#enddef

# Makes a unit loyal without displaying it as a trait, since it's a waste of
# real estate for hero units who are known to be close friends to the
# protagonists and therefore don't need to be explicitly displayed as loyal.
#define MOD_LOYAL_HERO
#ifver WESNOTH_VERSION <= 1.15.2
    [object]
        [effect]
            apply_to=loyal
        [/effect]
    [/object]
#else
    {TRAIT_LOYAL_HERO_NOSLOT}
#endif
#enddef

#define MOD_TRAIT_HERO
#ifver WESNOTH_VERSION <= 1.15.2
    {TRAIT_LOYAL}
#else
    {TRAIT_LOYAL_HERO}
#endif
#enddef

#define HERO_MOD
#ifver WESNOTH_VERSION <= 1.15.2
    {IS_HERO}
#endif
#enddef

#define LOYAL_MOD
#ifver WESNOTH_VERSION <= 1.15.2
    {IS_LOYAL}
#endif
#enddef

#define UNIT_PALETTE_SWITCH _SUF _FROM _TO
    [object]
        silent=yes
        [filter]
            {_SUF}
        [/filter]
        [effect]
            apply_to=image_mod
            add="PAL("+{_FROM}+">"+{_TO}+")"
        [/effect]
    [/object]
#enddef

#define MOBILIZE_GUARDIANS _SUF
    [store_unit]
        [filter]
            {_SUF}
        [/filter]
        variable=temp_MG_store
    [/store_unit]

    [foreach]
        array=temp_MG_store
        variable=u

        [do]
            {CLEAR_VARIABLE u.status.guardian,u.ai_special}

            [unstore_unit]
                variable="u"
                find_vacant=no
            [/unstore_unit]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE temp_MG_store}
#enddef

#define NO_EXPERIENCE_UNIT
    # The XP bar won't appear without any advancements.
    # experience=25
    # {AMLA_DEFAULT}
    # advances_to=null
    experience=1000
#enddef

# For use with MOVE_UNIT
#define IGNORE_MOVEMENT_COSTS
    [+move_unit]
        check_passability=no
    [/move_unit]
#enddef

# Resets one or more on-map units to their default statuses (including
# maximum HP, MP, and attacks.
#define RESET_UNIT_STATUSES _SUF
    [store_unit]
        [filter]
            {_SUF}
        [/filter]
        variable=temp_RUS_store
    [/store_unit]

    [foreach]
        array=temp_RUS_store
        variable=u

        [do]
            {CLEAR_VARIABLE u.status.uncovered}
            {CLEAR_VARIABLE u.status.poisoned}
            {CLEAR_VARIABLE u.status.slowed}
            {CLEAR_VARIABLE u.status.petrified}

            [set_variables]
                name=u
                mode=merge
                [value]
                    hitpoints=$u.max_hitpoints
                    moves=$u.max_moves
                    attacks_left=$u.max_attacks
                [/value]
            [/set_variables]

            [unstore_unit]
                variable=u
                find_vacant=no
            [/unstore_unit]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE temp_RUS_store}
#enddef

#define RESET_AND_SEND_TO_RECALL_LIST _SUF
    [put_to_recall_list]
        {_SUF}
        heal=yes
    [/put_to_recall_list]
#enddef

#define ATTACH_EVENTS_TO_UNIT _SUF _EVENTS
    [store_unit]
        [filter]
            {_SUF}
        [/filter]
        variable=temp_AETU_store
    [/store_unit]

    [set_variables]
        name=temp_AETU_store_events
        [literal]
            {_EVENTS}
        [/literal]
    [/set_variables]

    [set_variables]
        name=temp_AETU_store.event
        mode=append
        to_variable=temp_AETU_store_events.event
    [/set_variables]

    [unstore_unit]
        variable=temp_AETU_store
        find_vacant=no
    [/unstore_unit]

    {CLEAR_VARIABLE temp_AETU_store,temp_AETU_store_events}
#enddef

#
# Abort an attack sequence by temporarily removing the second unit from the
# map. This is meant to be used in an 'attack' event handler.
#
#define ABORT_ATTACK
    [set_variables]
        name=temp_ABORT_ATTACK_unit
        mode=replace
        to_variable=second_unit
    [/set_variables]

    [kill]
        x,y=$x2,$y2
    [/kill]

    [event]
        name=attack end

        {VARIABLE_INC unit.attacks_left}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]

        [unstore_unit]
            variable=temp_ABORT_ATTACK_unit
            find_vacant=no
        [/unstore_unit]

        {CLEAR_VARIABLE temp_ABORT_ATTACK_unit}
    [/event]
#enddef
