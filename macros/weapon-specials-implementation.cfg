#textdomain wesnoth-Naia

#
# SUF matching units that can cleanse the necrosis effect. This is a
# hand-tailored list including abilities known to fit the bill in
# Naia/IftU/AtS.
#
# (No, we can't use 'ability_type=heals' because not all healing abilities
# in mainline or UMC remove poison.)
#
#define NECROSIS:CLEANSER_SUF
    ability=curing,sylvan_essence_healing_and_curing,sylvan_essence_healing
#enddef

#define NECROSIS:TICK_DAMAGE_AMOUNT
    10 #enddef

#define NECROSIS:STATUS_EFFECT_OBJECT_ID
    necrosis_effects #enddef

#define NECROSIS:CLEANSE_UNIT_BY_ID _ID _DISPLAY_LABEL
    {VARIABLE necrosis_clear_id      {_ID}}
    {VARIABLE necrosis_display_label {_DISPLAY_LABEL}}

    [fire_event]
        name=necrosis cleanse single unit
    [/fire_event]

    {CLEAR_VARIABLE necrosis_clear_id,necrosis_display_label}
#enddef

#define WEAPON_SPECIAL_NECROSIS_EVENTS
    [event]
        id="necrosis:attacker_hits"
        name=attacker hits
        first_time_only=no
        [filter_attack]
#ifver WESNOTH_VERSION < 1.15.2
            special=necrosis
#else
            special_id=necrosis
#endif
        [/filter_attack]

        {EVENT_FORWARD_DISPATCH "necrosis proc"}
    [/event]

    [event]
        id="necrosis:defender_hits"
        name=defender hits
        first_time_only=no
        [filter_second_attack]
#ifver WESNOTH_VERSION < 1.15.2
            special=necrosis
#else
            special_id=necrosis
#endif
        [/filter_second_attack]

        {EVENT_INVERSE_DISPATCH "necrosis proc"}
    [/event]

    [event]
        id="necrosis:main"
        name=necrosis proc
        first_time_only=no
        [filter_second]
            [not]
                status=unpoisonable,not_living,necrosed
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.necrosed         yes}
        {VARIABLE second_unit.variables.necrosis_side $unit.side}

        [unstore_unit]
            find_vacant=no
            variable=second_unit
            female_text= _ "female^necrosed"
            male_text= _ "necrosed"
            red,green,blue=64,32,128
        [/unstore_unit]

        [object]
            id={NECROSIS:STATUS_EFFECT_OBJECT_ID}
            take_only_once=no
            silent=yes
            duration=scenario

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=image_mod
                add="BLEND(64,32,128,0.4)"
            [/effect]
        [/object]

        [sound]
            name="poison.ogg"
        [/sound]
    [/event]

    #
    # Function event for implementing the removal of necrosis effects.
    #
    # Parameters in the global variable table:
    #  - necrosis_clear_id <str>
    #    Id of the unit that needs to be cleansed.
    #  - necrosis_display_label <bool>
    #    Display floating label indicating the status change.
    #
    [event]
        id="necrosis:func:cleanse_single_unit"
        name=necrosis cleanse single unit
        first_time_only=no

        [store_unit]
            [filter]
                id=$necrosis_clear_id
            [/filter]
            variable=necrosis_cleansee
            kill=no
        [/store_unit]

        {CLEAR_VARIABLE necrosis_cleansee.status.necrosed,necrosis_cleansee.variables.necrosis_side}

        [for]
            array=necrosis_cleansee.modifications.object
            reverse=yes
            [do]
                [if]
                    {VARIABLE_LEXICAL_EQUALS necrosis_cleansee.modifications.object[$i].id {NECROSIS:STATUS_EFFECT_OBJECT_ID}}
                    [then]
                        {CLEAR_VARIABLE necrosis_cleansee.modifications.object[$i]}
                    [/then]
                [/if]
            [/do]
        [/for]

        [if]
            {VARIABLE_BOOLEAN_EQUALS necrosis_display_label true}
            [then]
                [unstore_unit]
                    variable=necrosis_cleansee
                    find_vacant=no
                    female_text= _ "female^cleansed"
                    male_text= _ "cleansed"
                    red,green,blue=0,255,0
                [/unstore_unit]
            [/then]
            [else]
                [unstore_unit]
                    variable=necrosis_cleansee
                    find_vacant=no
                [/unstore_unit]
            [/else]
        [/if]

        {CLEAR_VARIABLE necrosis_cleansee}
    [/event]

    #
    # Main damage per turn tick event.
    #
    [event]
        id="necrosis:tick"
        name=turn refresh
        first_time_only=no

        [store_unit]
            [filter]
                side=$side_number
                status=necrosed
                [not]
                    x,y=recall,recall
                [/not]
            [/filter]
            variable=necrosed_units
            kill=no
        [/store_unit]

        [foreach]
            array=necrosed_units
            [do]
                [if]
                    [have_unit]
                        x,y=$this_item.x,$this_item.y
                        [and]
                            # Next to a unit that can remove poison
                            [filter_adjacent]
                                {NECROSIS:CLEANSER_SUF}
                                is_enemy=no
                            [/filter_adjacent]
                            # Or stationed on a village or oasis
                            [or]
                                [filter_location]
                                    formula="(healing > 0)"
                                [/filter_location]
                            [/or]
                        [/and]
                    [/have_unit]
                    [then]
                        {NECROSIS:CLEANSE_UNIT_BY_ID $this_item.id yes}
                    [/then]
                    [else]
                        [harm_unit]
                            [filter]
                                x,y=$this_item.x,$this_item.y
                            [/filter]

                            amount={NECROSIS:TICK_DAMAGE_AMOUNT}
                            animate=yes
                            kill=yes
                            fire_event=yes
                        [/harm_unit]
                    [/else]
                [/if]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE necrosed_units}
    [/event]

    #
    # Necrosis death handler.
    #
    [event]
        id="necrosis:death"
        name=die
        first_time_only=no
        [filter]
            status=necrosed
        [/filter]

        # NOTE: The resulting undead unit isn't loyal. This is intentional.

        [unit]
            type=Ghoul
            side=$unit.variables.necrosis_side
            name=$unit.name
            x,y=$x1,$y1
            overwrite=yes
            random_gender=yes # futureproofing x3
            random_traits=yes
            generate_name=yes
        [/unit]
    [/event]

    #
    # Cleanses all units on victory (SP).
    #
    [event]
        id="necrosis:scenario_cleanup"
        name=victory

        [store_unit]
            [filter]
                status=necrosed
            [/filter]
            variable=necrosed_units
            kill=no
        [/store_unit]

        [foreach]
            array=necrosed_units
            [do]
                {NECROSIS:CLEANSE_UNIT_BY_ID $this_item.id no}
            [/do]
        [/foreach]

        {CLEAR_VARIABLE necrosed_units}
    [/event]
#enddef

#define WEAPON_SPECIAL_MARK_CLEAR_STATUS _EXTRA_SUF
    [store_unit]
        [filter]
            status=marked
            {_EXTRA_SUF}
        [/filter]
        kill=no
        variable=temp_SP_MARK_cleanup
    [/store_unit]

    [foreach]
        array=temp_SP_MARK_cleanup
        [do]
            {CLEAR_VARIABLE this_item.status.marked}

            [unstore_unit]
                find_vacant=no
                variable=this_item
            [/unstore_unit]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE temp_SP_MARK_cleanup}
#enddef

#define WEAPON_SPECIAL_MARK_EVENTS
    [event]
        id=sp_mark:attacker_hits
        name=attacker hits
        first_time_only=no
        [filter_attack]
#ifver WESNOTH_VERSION < 1.15.2
            special=mark
#else
            special_id=mark
#endif
        [/filter_attack]
        [filter_second]
            [not]
                status=marked
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.marked yes}

        [unstore_unit]
            find_vacant=no
            variable=second_unit
            female_text = _ "female^marked"
            male_text= _ "marked"
            red,green,blue=128,196,196
        [/unstore_unit]

        [sp_mark_calculate_bonus]
            variable=temp_SP_MARK_res
        [/sp_mark_calculate_bonus]

        [object]
            silent=yes
            duration=turn end
            [filter]
                x,y=$x2,$y2
            [/filter]
            [effect]
                apply_to=image_mod
                add="CS(0,50,50)"
            [/effect]
            [effect]
                apply_to=resistance
                [insert_tag]
                    name=resistance
                    variable=temp_SP_MARK_res
                [/insert_tag]
            [/effect]
        [/object]

        {CLEAR_VARIABLE temp_SP_MARK_res}

        [event]
            id="sp_mark:side$second_unit.side|_cleanup"
            name="side $second_unit.side turn end"
            delayed_variable_substitution=no

            {WEAPON_SPECIAL_MARK_CLEAR_STATUS side=$second_unit.side}

            [remove_event]
                id="sp_mark:side$second_unit.side|_cleanup"
            [/remove_event]
        [/event]
    [/event]

    [event]
        id=sp_mark:scenario_cleanup
        name=victory

        {WEAPON_SPECIAL_MARK_CLEAR_STATUS ()}
    [/event]
#enddef
